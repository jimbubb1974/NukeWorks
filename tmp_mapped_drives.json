<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Select Database - NukeWorks</title>

    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />

    <!-- Bootstrap Icons -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css"
    />

    <!-- Custom CSS -->
    <link
      rel="stylesheet"
      href="/static/css/style.css"
    />

    
  </head>
  <body>
    <!-- Navigation Bar -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
      <div class="container-fluid">
        <a class="navbar-brand" href="/dashboard"
          >NukeWorks</a
        >

        
      </div>
    </nav>

    <!-- Flash Messages -->
      

    <!-- Main Content -->
    <main class="container-fluid mt-4">
<div class="container mt-5">
  <div class="row justify-content-center">
    <div class="col-md-10 col-lg-8">
      <div class="card shadow">
        <div class="card-header bg-primary text-white">
          <h3 class="mb-0"><i class="bi bi-database"></i> Select Database</h3>
        </div>
        <div class="card-body">
          <p class="text-muted">
            Choose which database to use for this session. You can switch
            databases at any time.
          </p>

          <form
            method="POST"
            action="/select-db"
          >
            <!-- Suggested Default -->
            
            <div class="alert alert-info">
              <i class="bi bi-star-fill"></i> <strong>Suggested:</strong>
              C:\Users\jbubb\OneDrive - MPR Associates\NED\5 - Misc\Projects Database\nukeworks.sqlite
              <button
                type="button"
                class="btn btn-sm btn-outline-primary float-end"
                onclick="document.getElementById('db_path').value='C:\Users\jbubb\OneDrive - MPR Associates\NED\5 - Misc\Projects Database\nukeworks.sqlite'"
              >
                Use This
              </button>
            </div>
            

            <!-- Scanned Databases -->
            
            <div class="mb-4">
              <h5>Available Databases</h5>
              <div class="list-group">
                
                <label class="list-group-item list-group-item-action">
                  <div
                    class="d-flex w-100 justify-content-between align-items-center"
                  >
                    <div class="form-check">
                      <input class="form-check-input" type="radio"
                      name="db_path" id="db_1" value="C:\Users\jbubb\Documents\CodeProjects\NukeWorks\databases\development\nukeworks.sqlite" >
                      <label class="form-check-label" for="db_1">
                        <strong>Test Database</strong>
                        <br />
                        <small class="text-muted">C:\Users\jbubb\Documents\CodeProjects\NukeWorks\databases\development\nukeworks.sqlite</small>
                      </label>
                    </div>
                    <span class="badge bg-secondary">development</span>
                  </div>
                </label>
                
              </div>
            </div>
            

            <!-- Recent Databases -->
            
            <div class="mb-4">
              <h5>Recent Databases</h5>
              <div class="list-group">
                
                <label class="list-group-item list-group-item-action">
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="db_path"
                    id="recent_1" value="C:\Users\jbubb\OneDrive - MPR Associates\NED\5 - Misc\Projects Database\nukeworks.sqlite" >
                    <label
                      class="form-check-label"
                      for="recent_1"
                    >
                      <strong>Test Database</strong>
                      <br />
                      <small class="text-muted">C:\Users\jbubb\OneDrive - MPR Associates\NED\5 - Misc\Projects Database\nukeworks.sqlite</small>
                    </label>
                  </div>
                </label>
                
                <label class="list-group-item list-group-item-action">
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="db_path"
                    id="recent_2" value="C:\Users\jbubb\Documents\CodeProjects\NukeWorks\databases\development\nukeworks.sqlite" >
                    <label
                      class="form-check-label"
                      for="recent_2"
                    >
                      <strong>Test Database</strong>
                      <br />
                      <small class="text-muted">C:\Users\jbubb\Documents\CodeProjects\NukeWorks\databases\development\nukeworks.sqlite</small>
                    </label>
                  </div>
                </label>
                
              </div>
            </div>
            

            <!-- Manual Entry -->
            <div class="mb-4">
              <h5>Or Browse for Database File</h5>
              <div class="input-group">
                <span class="input-group-text"
                  ><i class="bi bi-folder"></i
                ></span>
                <input
                  type="text"
                  class="form-control"
                  id="db_path"
                  name="db_path"
                  placeholder="C:\path\to\database.sqlite or \\network\path\database.sqlite"
                  value=""
                />
                <button
                  class="btn btn-outline-secondary"
                  type="button"
                  id="browseButton"
                >
                  <i class="bi bi-folder2-open"></i> Browse...
                </button>
              </div>
              <input
                type="file"
                id="fileInput"
                accept=".sqlite,.db,.sqlite3"
                style="display: none"
              />
              <small class="form-text text-muted">
                Click "Browse..." to select a database file, or enter the path
                manually. UNC paths are supported.
              </small>
            </div>

            <!-- Custom Display Name -->
            <div class="mb-4">
              <label for="custom_name" class="form-label"
                >Custom Display Name (Optional)</label
              >
              <input
                type="text"
                class="form-control"
                id="custom_name"
                name="custom_name"
                placeholder="e.g., Production Database"
              />
              <small class="form-text text-muted">
                Set a friendly name for this database. This will be saved in the
                database file.
              </small>
            </div>

            <!-- Buttons -->
            <div class="d-grid gap-2 d-md-flex justify-content-md-between">
              <button
                type="submit"
                formaction="/select-db/refresh"
                class="btn btn-outline-secondary"
              >
                <i class="bi bi-arrow-clockwise"></i> Refresh List
              </button>
              <div class="btn-group">
                <button type="button" id="mappedDrivesBtn" class="btn btn-outline-info">
                  <i class="bi bi-hdd-network"></i> Mapped Drives
                </button>
                <button type="submit" class="btn btn-primary btn-lg">
                <i class="bi bi-check-circle"></i> Continue
                </button>
              </div>
            </div>
          </form>
        </div>
      </div>

      
    </div>
  </div>
</div>
</main>

    <!-- Footer -->
    <footer class="footer mt-auto py-3 bg-light">
      <div class="container text-center">
        <span class="text-muted"
          >NukeWorks &copy; 2025 | Nuclear Project Management Database</span
        >
      </div>
    </footer>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Custom JS -->
    <script src="/static/js/main.js"></script>

    
<script>
  // Allow radio buttons to be selected when clicking anywhere on the list item
  document.querySelectorAll(".list-group-item").forEach((item) => {
    item.addEventListener("click", function (e) {
      if (e.target.type !== "radio") {
        const radio = this.querySelector('input[type="radio"]');
        if (radio) {
          radio.checked = true;
          // Also update the manual text input
          document.getElementById("db_path").value = radio.value;
        }
      }
    });
  });

  // Update manual text input when radio is selected
  document
    .querySelectorAll('input[type="radio"][name="db_path"]')
    .forEach((radio) => {
      radio.addEventListener("change", function () {
        document.getElementById("db_path").value = this.value;
      });
    });

  // File browser functionality
  const browseButton = document.getElementById("browseButton");
  const fileInput = document.getElementById("fileInput");
  const dbPathInput = document.getElementById("db_path");

  browseButton.addEventListener("click", function () {
    fileInput.click();
  });

  fileInput.addEventListener("change", function (e) {
    if (this.files && this.files[0]) {
      // Get the full path (note: for security reasons, browsers only give us the filename)
      // We'll need to use the File System Access API for the full path
      const file = this.files[0];

      // Try to get the full path using webkitRelativePath or the File System Access API
      if (file.path) {
        // Electron/Node.js environment
        dbPathInput.value = file.path;
      } else {
        // Browser environment - we can only get the filename
        // Show the filename but warn the user
        dbPathInput.value = file.name;

        // If the browser supports the File System Access API, try to get the handle
        if (window.showOpenFilePicker) {
          // We'll need to re-implement using showOpenFilePicker for full path access
          console.log("File System Access API is available");
        } else {
          alert(
            "Note: Your browser security settings only allow the filename to be shown.\n\n" +
              "Please manually enter the full path to the database file, or use the suggested databases above.\n\n" +
              "Selected file: " +
              file.name
          );
          dbPathInput.focus();
        }
      }
    }
  });

  // If the user types or pastes into the manual path input, clear any
  // selected radio option so the manual path will be used when submitting.
  dbPathInput.addEventListener('input', function () {
    const val = this.value && this.value.trim();
    if (val) {
      document
        .querySelectorAll('input[type="radio"][name="db_path"]')
        .forEach((r) => (r.checked = false));
    }
  });

  // Alternative: Use File System Access API for better path handling
  if (window.showOpenFilePicker) {
    browseButton.addEventListener("click", async function (e) {
      e.preventDefault();
      try {
        const [fileHandle] = await window.showOpenFilePicker({
          types: [
            {
              description: "SQLite Database Files",
              accept: {
                "application/x-sqlite3": [".sqlite", ".db", ".sqlite3"],
              },
            },
          ],
          multiple: false,
        });

        // Get the file
        const file = await fileHandle.getFile();

        // Unfortunately, we still can't get the full path in a browser for security reasons
        // But we can at least show the filename and the user can complete the path
        dbPathInput.value = file.name;

        // Show a message to help the user
        const pathParts = [];
        if (fileHandle.name) {
          alert(
            "File selected: " +
              fileHandle.name +
              "\n\n" +
              "For security reasons, the browser cannot reveal the full path.\n" +
              "Please complete the full path in the text box.\n\n" +
              "If the file is in your databases folder, you may see it in the list above."
          );
        }
      } catch (err) {
        if (err.name !== "AbortError") {
          console.error("Error selecting file:", err);
        }
      }
    });
  }

    // Mapped drives modal handling
    const mappedDrivesBtn = document.getElementById('mappedDrivesBtn');
    if (mappedDrivesBtn) {
      mappedDrivesBtn.addEventListener('click', async function (e) {
        e.preventDefault();
        try {
          const res = await fetch('/select-db/mapped-drives');
          if (!res.ok) throw new Error('Failed to fetch mapped drives');
          const drives = await res.json();

          // Build modal content
          let html = '<div class="list-group">';
          drives.forEach((d) => {
            const label = d.letter || d.root;
            const desc = d.target || d.root;
            html += `<button type="button" class="list-group-item list-group-item-action" data-path="${desc}">${label} <br/><small class=\"text-muted\">${desc}</small></button>`;
          });
          html += '</div>';

          // Show simple prompt modal (use prompt fallback if bootstrap modal not available)
          if (typeof bootstrap !== 'undefined') {
            const modalEl = document.createElement('div');
            modalEl.className = 'modal fade';
            modalEl.tabIndex = -1;
            modalEl.innerHTML = `
              <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title">Mapped Drives</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                  </div>
                  <div class="modal-body">${html}</div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                  </div>
                </div>
              </div>`;

            document.body.appendChild(modalEl);
            const modal = new bootstrap.Modal(modalEl);
            modal.show();

            modalEl.querySelectorAll('.list-group-item').forEach((btn) => {
              btn.addEventListener('click', function () {
                dbPathInput.value = this.getAttribute('data-path');
                // Clear radios
                document.querySelectorAll('input[type="radio"][name="db_path"]').forEach((r) => (r.checked = false));
                modal.hide();
                modalEl.remove();
              });
            });
          } else {
            // Fallback: prompt user to paste a drive root
            const pick = prompt('Mapped drives:\n' + drives.map(d => (d.letter || d.root) + ' => ' + (d.target || d.root)).join('\n') + '\n\nType or paste the desired root path:');
            if (pick) dbPathInput.value = pick;
          }
        } catch (err) {
          console.error(err);
          alert('Failed to list mapped drives: ' + err.message);
        }
      });
    }
</script>

  </body>
</html>
